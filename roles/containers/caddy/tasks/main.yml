---
- name: Setup user
  ansible.builtin.include_role:
    name: container_setup
  vars:
    podman_user: "{{ caddy_user }}"

# note: caddy_user is on the host; caddy_uid and caddy_gid are within the container.

- name: Get user information
  ansible.builtin.user:
    name: "{{ caddy_user }}"
  register: container_user

- name: Determine conf dir path
  ansible.builtin.set_fact:
    caddy_conf_dir_path: "{{ container_user.home }}/conf"

- name: Setup podman bind mounts
  ansible.builtin.include_role:
    name: container_mounts
  vars:
    podman_user: "{{ caddy_user }}"
    podman_mounts:
      - path: "{{ caddy_data_path }}"
        uid: "{{ caddy_uid }}"
        gid: "{{ caddy_gid }}"
      - path: "{{ caddy_conf_dir_path }}"
        uid: 0 # root in container
        gid: "{{ caddy_gid }}"

- name: Get conf dir permissions
  ansible.builtin.stat:
    path: "{{ caddy_conf_dir_path }}"
  register: caddy_conf_dir

- name: Deploy Caddyfile
  ansible.builtin.template:
    src: "Caddyfile.j2"
    dest: "{{ caddy_conf_dir_path }}/Caddyfile"
    owner: "{{ caddy_user }}" # root in the container
    group: "{{ caddy_conf_dir.stat.gid }}" # caddy_gid on host
    mode: "u=rw,g=r,o="
    # note: no validation, because it's too inconvenient to reach into the container
    # to get caddy and validate
  register: caddy_conf

- name: Deploy container unit
  ansible.builtin.template:
    src: "caddy.container"
    dest: "{{ container_user.home }}/.config/containers/systemd/caddy.container"
    mode: "u=rw,g=,o="
    owner: "{{ caddy_user }}"
    group: "{{ caddy_user }}"
  register: container_unit

- name: Finalize podman setup
  ansible.builtin.include_role:
    name: container_finalize
  vars:
    podman_user: "{{ caddy_user }}"
    podman_unit_names:
      - caddy
  when: container_unit.changed
