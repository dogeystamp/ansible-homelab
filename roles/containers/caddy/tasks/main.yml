---
- name: Setup user
  ansible.builtin.include_role:
    name: container_setup
  vars:
    podman_user: "{{ caddy_user }}"

- name: Get user information
  ansible.builtin.user:
    name: "{{ caddy_user }}"
  register: container_user

- name: Determine if conf directory exists
  ansible.builtin.stat:
    path: "{{ container_user.home }}/conf"
  register: caddy_conf_dir_c

- name: Create Caddy configuration directory
  ansible.builtin.file:
    path: "{{ container_user.home }}/conf"
    state: directory
    owner: "{{ caddy_user }}"
    group: "{{ caddy_user }}"
    mode: "u=rwX,g=r,o="
  register: caddy_conf_dir
  when: not caddy_conf_dir_c.stat.exists

- name: Deploy Caddyfile
  ansible.builtin.template:
    src: "Caddyfile.j2"
    dest: "{{ caddy_conf_dir.path }}/Caddyfile"
    owner: "{{ caddy_user }}" # root in the container
    group: "{{ caddy_user }}"
    mode: "u=rw,g=r,o=r"
    # note: no validation, because it's too inconvenient to reach into the container
    # to get caddy and validate
  register: caddy_conf

- name: Deploy container unit
  ansible.builtin.template:
    src: "caddy.container"
    dest: "{{ container_user.home }}/.config/containers/systemd/caddy.container"
    mode: "u=rw,g=,o="
    owner: "{{ caddy_user }}"
    group: "{{ caddy_user }}"
  register: container_unit

- name: Setup podman bind mounts
  ansible.builtin.include_role:
    name: container_mounts
  vars:
    podman_user: "{{ caddy_user }}"
    podman_mounts:
      - path: "{{ caddy_data_path }}"
        uid: "{{ caddy_uid }}"
        gid: "{{ caddy_gid }}"
      - path: "{{ caddy_conf_dir.path }}"
        uid: 0
        gid: "{{ caddy_gid }}"
  when: container_unit.changed or caddy_conf.changed

- name: Finalize podman setup
  ansible.builtin.include_role:
    name: container_finalize
  vars:
    podman_user: "{{ caddy_user }}"
    podman_unit_names:
      - caddy
  when: container_unit.changed
