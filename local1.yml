- name: "Local I: Controller bootstrap"
  hosts: localhost
  tasks:
    - name: Install ACL (to ensure unprivileged become works)
      ansible.builtin.package:
        name: acl
        state: present

    - name: Create remote administration account
      ansible.builtin.user:
        name: "{{ remote_admin_username }}"
        state: present
        ssh_key_type: "ed25519"
        ssh_key_comment: "{{ remote_admin_username }}"
        ssh_key_file: ".ssh/key"
        generate_ssh_key: true
        create_home: true
      register: remote_admin_user

    - name: Generate WireGuard keypair
      ansible.builtin.include_role:
        name: wireguard-key
      vars:
        wireguard_interface: wg1

    - name: Create Git folder for remote user
      ansible.builtin.file:
        path: "{{ remote_admin_user.home }}/.config/git"
        owner: "{{ remote_admin_user.name }}"
        group: "{{ remote_admin_user.group }}"
        recurse: true
        mode: "u=rwX,g=,o="
      register: git_folder

    - name: Create SSH folder for remote user
      ansible.builtin.file:
        path: "{{ remote_admin_user.home }}/.ssh"
        owner: "{{ remote_admin_user.name }}"
        group: "{{ remote_admin_user.group }}"
        recurse: true
        mode: "u=rwX,g=,o="
      register: ssh_folder

    - name: Deploy SSH signing keys
      ansible.builtin.template:
        src: "allowed_signers.j2"
        dest: "{{ git_folder.path }}/allowed_signers"
        owner: "{{ remote_admin_user.name }}"
        group: "{{ remote_admin_user.group }}"
        mode: "u=rw,g=,o="

    - name: Deploy Git config
      ansible.builtin.template:
        src: "git_config.j2"
        dest: "{{ git_folder.path }}/config"
        owner: "{{ remote_admin_user.name }}"
        group: "{{ remote_admin_user.group }}"
        mode: "u=rw,g=,o="

    - name: Deploy SSH config
      ansible.builtin.template:
        src: "ssh_config.j2"
        dest: "{{ ssh_folder.path }}/config"
        owner: "{{ remote_admin_user.name }}"
        group: "{{ remote_admin_user.group }}"
        mode: "u=rw,g=,o="

    - name: Clone remote repo
      ansible.builtin.git:
        repo: "{{ git_repo }}"
        version: "{{ git_branch }}"
        dest: "{{ remote_admin_user.home }}/repo"
        verify_commit: true
      become_user: "{{ remote_admin_user.name }}"
      become: true
