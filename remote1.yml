---
- name: "Remote I: Pre-VM setup"
  hosts: hypervisors
  tasks:
    - name: Read controller SSH public key
      set_fact:
        controller_ssh_pubkey: "{{ lookup('file', controller_ssh_pubkey_path )}}"

    - name: Read controller VPN ONE public key
      set_fact:
        controller_vpn_pubkey: "{{ lookup('file', '/etc/systemd/network/network.wireguard.public.wg1')}}"

    - name: Generate WireGuard server keys (VPN ONE)
      ansible.builtin.include_role:
        name: wireguard-key
      vars:
        wireguard_interface: "wg1"

    - name: Retrieve WireGuard server pubkey (VPN ONE)
      ansible.builtin.template:
        src: "raw.j2"
        dest: "~/wireguard-server-wg1.pub"
        mode: "u=rw,g=r,o=r"
      delegate_to: localhost
      become: false
      vars:
        content: "{{ hostvars.localhost.wireguard_public_keys_wg1[groups.hypervisors[0]] }}"

    - name: Create virtual machines
      ansible.builtin.include_role:
        name: libvirt
      with_items: "{{ groups['domains'] }}"
      loop_control:
        loop_var: current_domain
      vars:
        libvirt_vm_name: "{{ current_domain }}"
        libvirt_mac_address: "{{ hostvars[current_domain].libvirt_mac_address }}"
        libvirt_vpn_addresses:
          - "{{ hostvars[current_domain].ansible_host }}/24" # note the /24 refers to the VPN subnet
        libvirt_vpn_interface: "wg1"
        libvirt_memory_mib: "{{ hostvars[current_domain].libvirt_memory_mib | default(0) }}"
        libvirt_cpu_count: "{{ hostvars[current_domain].libvirt_cpu_count | default(0) }}"
        libvirt_agent_user: "{{ admin_username }}"
        libvirt_agent_pubkey: "{{ controller_ssh_pubkey }}"

    - name: "Compile peer list (VPN ONE): virtual machines"
      ansible.builtin.set_fact:
        wg_server_peers: |
          {{
            wg_server_peers | default([]) +
            [{
              'public_key': hostvars['localhost'].wireguard_public_keys_wg1[item],
              'allowed_ips': [hostvars[item].ansible_host + '/32'],
            }]
          }}
      with_items: "{{ groups['domains'] }}"

    - name: "Compile peer list (VPN ONE): Ansible controller host"
      ansible.builtin.set_fact:
        wg_server_peers: |
          {{
            wg_server_peers | default([]) +
            [{
              'public_key': controller_vpn_pubkey,
              'allowed_ips': [controller_vpn_ip + '/32'],
            }]
          }}

    - name: WireGuard server setup (VPN ONE)
      ansible.builtin.include_role:
        name: wireguard
      vars:
        wireguard_interface: "wg1"
        wireguard_listen_port: 51820
        wireguard_description: "VPN ONE â€” WireGuard tunnel"
        wireguard_addresses:
          - "{{ bastion_vpn_ip }}/24"
        # note masquerade is not enabled because this is implemented by our nftables role
        wireguard_immediate: true
        wireguard_peers: "{{ wg_server_peers }}"

    - name: Configure sysctl
      ansible.builtin.import_role:
        name: sysctl
      vars:
        sysctl_ip_forwarding: true
      tags: sysctl-hypervisor
